name: DRF Test

on:
  push:
  pull_request:
    types:
      - opened

env:
  IMAGE: ${{ vars.NCR_REGISTRY }}/follow-app

jobs:
  lint:
    name: black check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: install black
        run: pip install black
      - name: check black
        run: black --check .

  drf-test:
    needs: lint
    name: test drf with docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: set env file
        run: echo -n "${{ secrets.TEST_ENV_FILE }}" | base64 -d > .env

      - name: test
        run: |
          docker compose up --build -d
          docker compose run follow-app python manage.py test

  send-discord-fail-message:
    needs: drf-test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send Message to Discord
        uses: "hugoalh/send-discord-webhook-ghaction@v5.0.0"
        with:
          key: ${{ secrets.DISCORD_WEBHOOK_KEY }}
          payload: |
            {
              "content": "",
              "embeds": [
                {
                  "title": "Test Failed",
                  "description": "workflow failed at DRF test stage.",
                  "color": "#b42323",
                  "footer": {
                    "text": "${{ github.event_name }}"
                  }
                }
              ],
              "username": "Project Build Manager",
              "avatar_url": "https://file.limeskin.kro.kr/curious_cat-small.png",
            }

  build-and-push:
    needs: drf-test
    name: build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: get version
        run: |
          echo "APP_VERSION=$(python -c "from follow_app.config.settings.base import VERSION;print(VERSION)")" >> $GITHUB_ENV

      - name: Build and Push
        # if: ${{ !env.ACT }}
        run: |
          docker login -u ${{ secrets.NCR_ACCESS_KEY }} -p ${{ secrets.NCR_SECRET_KEY }} ${{ vars.NCR_REGISTRY }}
          docker build ./follow_app -t ${{ env.IMAGE }}:$APP_VERSION -t ${{ env.IMAGE }}:latest
          docker push ${{ env.IMAGE }}:$APP_VERSION
          docker push ${{ env.IMAGE }}:latest
